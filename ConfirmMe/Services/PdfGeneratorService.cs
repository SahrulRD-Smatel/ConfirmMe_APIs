using QuestPDF.Fluent;
using QuestPDF.Infrastructure; // Menggunakan QuestPDF.Infrastructure.Color
using ConfirmMe.Dto;
using System.IO;
using QuestPDF.Helpers;

namespace ConfirmMe.Services
{
    public class PdfGeneratorService : IPdfGeneratorService
    {
        public byte[] GenerateApprovalPdf(ApprovalRequestDetailDto request, byte[] barcodeImage)
        {
            var pdf = Document.Create(container =>
            {
                container.Page(page =>
                {
                    // Page setup
                    page.Margin(50);
                    page.Size(PageSizes.A4);

                    // Header dengan warna biru menggunakan QuestPDF.Infrastructure.Color
                    page.Header().AlignCenter().Text("Approval Request")
                        .FontSize(20).Bold().Underline()
                        .FontColor(QuestPDF.Infrastructure.Color.FromRGB(0, 0, 255)); // Warna biru dengan QuestPDF.Infrastructure.Color

                    // Content section
                    page.Content().Column(col =>
                    {
                        // Title and Description with padding
                        col.Item().PaddingBottom(10).Text($"Title: {request.Title}")
                            .FontSize(16).Bold();

                        col.Item().PaddingBottom(10).Text($"Description: {request.Description}")
                            .FontSize(14);

                        col.Item().PaddingBottom(10).Text($"Approval Type: {request.ApprovalType}")
                            .FontSize(14);

                        // Line separator
                        col.Item().PaddingBottom(10).LineHorizontal(1);

                        // Approval Flow section with padding
                        col.Item().PaddingTop(20).Text("Approval Flow:")
                            .FontSize(16).Bold();

                        foreach (var flow in request.ApprovalFlows)
                        {
                            col.Item().PaddingBottom(5).Text($"• {flow.PositionTitle} - {flow.ApproverName} ({flow.Status} @ {flow.ApprovedAt?.ToString("dd/MM/yyyy HH:mm")})")
                                .FontSize(14);
                        }

                        // Line separator
                        col.Item().PaddingTop(10).LineHorizontal(1);

                        // Add barcode image if available
                        if (barcodeImage != null)
                        {
                            col.Item().PaddingTop(20).Image(barcodeImage).FitWidth();
                        }

                        // Footer section
                        col.Item().PaddingTop(30).AlignCenter().Text("Generated by ConfirmMe System")
                            .FontSize(12).Italic();
                    });

                    // Footer with additional information
                    page.Footer().AlignCenter().Text($"Generated on {DateTime.UtcNow:dd/MM/yyyy HH:mm:ss}")
                        .FontSize(10);
                });
            });

            using var stream = new MemoryStream();
            pdf.GeneratePdf(stream);
            return stream.ToArray();
        }
    }
}
